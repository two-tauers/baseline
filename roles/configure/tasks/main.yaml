---
- name: Set hostname
  ansible.builtin.hostname: name="{{ hostname }}"
  notify: reboot

- name: Set memsplit
  ansible.builtin.lineinfile:
    path: /boot/firmware/config.txt
    regexp: '^gpu_mem='
    line: 'gpu_mem={{ memsplit }}'
  notify: reboot

- name: Set wifi status
  ansible.builtin.lineinfile:
    path: /boot/firmware/config.txt
    regexp: '^dtoverlay=disable-wifi'
    line: 'dtoverlay=disable-wifi'
    state: "{{ 'present' if not wifi_enabled else 'absent' }}"
  notify: reboot

- name: Set bt status
  ansible.builtin.lineinfile:
    path: /boot/firmware/config.txt
    regexp: '^dtoverlay=disable-bt'
    line: 'dtoverlay=disable-bt'
    state: "{{ 'present' if not bt_enabled else 'absent' }}"
  notify: reboot

- name: GPIO fan control
  ansible.builtin.lineinfile:
    path: /boot/firmware/config.txt
    regexp: '^dtoverlay=gpio-fan'
    line: 'dtoverlay=gpio-fan,gpiopin=3,temp=70000'
    state: "{{ 'present' if fan_control == 'gpio' else 'absent' }}"
  notify: reboot
    
- name: POE fan control
  ansible.builtin.blockinfile:
    path: /boot/firmware/config.txt
    marker: "# {mark} POE fan control (ansible managed)"
    block: |
      dtoverlay=rpi-poe
      dtparam=poe_fan_temp0=80000,poe_fan_temp0_hyst=2000
      dtparam=poe_fan_temp1=75000,poe_fan_temp1_hyst=5000
      dtparam=poe_fan_temp2=70000,poe_fan_temp2_hyst=5000
      dtparam=poe_fan_temp3=65000,poe_fan_temp3_hyst=5000
    state: "{{ 'present' if fan_control == 'poe' else 'absent' }}"
  notify: reboot

- name: Check timezone
  ansible.builtin.command: grep "{{ timezone }}" /etc/timezone
  register: timezone_set
  failed_when: false
  changed_when: false

- name: Set timezone
  ansible.builtin.command: timedatectl set-timezone {{ timezone }}
  when: timezone_set.rc != 0
  notify: reboot
